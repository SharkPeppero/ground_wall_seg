
# By default, VLP-16 LiDAR and HDL-32 LiDAR are supported.

# ROS interface.
sub_cloud_topic:          "/velodyne_points_0" # /velodyne_points_0
pub_cloud_topic:          "/EOS_segmted_cloud"
pub_rangeimage_topic:     "/EOS_range_image"
pub_extractedlines_topic: "/EOS_extracted_lines"
base_link_frame_id:       "base_link"
sensor_frame_id:          "velodyne"

# # LiDAR type. (for velodyne VLP-16)
# kLidarRows: 16
# kLidarCols: 1800
# kLidarHorizRes: 0.2       # all in degree
# kLidarVertRes:  2.0
# kLidarVertFovMax:  15.0
# kLidarVertFovMin: -15.0
# kLidarProjectionError: 0.5

# LiDAR type. (for velodyne HDL-32, +10.67° ~ -30.67°)
kLidarRows: 32
kLidarCols: 2169
kLidarHorizRes: 0.166       # all in degree (10Hz)
kLidarVertRes:  1.333
kLidarVertFovMax:  10.67
kLidarVertFovMin: -30.67
kLidarProjectionError: 0.5

# basic parameters.
kNumSectors: 360                    # Number of angular segments, {180, 240, 360} are recommended.

# extinsics (from base(ground) to sensor).
kExtrinsicTrans: [0.0, 0.0, 1.832]  # sensor height from ground(1.832 for UrbanLoco, 1.3 for home-made dataset)
kExtrinsicRot: [1.0, 0.0, 0.0,
                0.0, 1.0, 0.0,
                0.0, 0.0, 1.0]
# kExtrinsicRot: [0.0, 1.0, 0.0,
#                 1.0, 0.0, 0.0,
#                 0.0, 0.0, -1.0]

# Identify ground.
# kGroundSameLineTolerance: 2       # 2 degree(0.035, around 0.1m/3m)
# kGroundSlopeTolerance: 10          # 10 degrees(0.176)
# kGroundYInterceptTolerance: 0.5       # the intercept(b) of a line.
# kGroundPointLineDistThres: 0.1        # Maximum point-line distance for a point to be labelled as ground.


# Identify wall.
# kWallSameLineTolerance: 10        # 10 degrees(0.176), 6 degree(0.1051), 3 degree(0.0524)
# kWallSlopeTolerance: 75             # 85 degrees(11.43), 80 degrees(5.67), 75 degrees(3.73)
# kWallLineMinBinNum: 3                 # a wall line should cover at least 3 rings.
# kWallPointLineDistThres: 0.1          # Maximum point-line distance for a point to be labelled as wall.


# *******************************************out_1****************************************
# Identify ground.
# kGroundSameLineTolerance: 20       # 2 degree(0.035, around 0.1m/3m)
# kGroundSlopeTolerance: 10          # 10 degrees(0.176)
# kGroundYInterceptTolerance: 0.5       # the intercept(b) of a line.
# kGroundPointLineDistThres: 0.1        # Maximum point-line distance for a point to be labelled as ground.

# # Identify wall.
# kWallSameLineTolerance: 30        # 10 degrees(0.176), 6 degree(0.1051), 3 degree(0.0524)
# kWallSlopeTolerance: 75             # 85 degrees(11.43), 80 degrees(5.67), 75 degrees(3.73)
# kWallLineMinBinNum: 7          # a wall line should cover at least 3 rings.
# kWallPointLineDistThres: 0.1          # Maximum point-line distance for a point to be labelled as wall.

# x: 20
# y: 20
# z: 20

# # *******************************************out_2****************************************
# # Identify ground.
kGroundSameLineTolerance: 2       # 2 degree(0.035, around 0.1m/3m)
kGroundSlopeTolerance: 10          # 10 degrees(0.176)
kGroundYInterceptTolerance: 0.5       # the intercept(b) of a line.
kGroundPointLineDistThres: 0.1       # Maximum point-line distance for a point to be labelled as ground.

# Identify wall.
kWallSameLineTolerance: 15        # 10 degrees(0.176), 6 degree(0.1051), 3 degree(0.0524)
kWallSlopeTolerance: 85           # 85 degrees(11.43), 80 degrees(5.67), 75 degrees(3.73)
kWallLineMinBinNum: 5         # a wall line should cover at least 3 rings.
kWallPointLineDistThres: 0.1          # Maximum point-line distance for a point to be labelled as wall.

x: 20
y: 12
z: 20
